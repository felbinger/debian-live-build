#!/bin/bash

#################################
#                               #
#     Secure Shell Networks     #
#          Wipe System          #
#                               #
#################################

ataPassword="irrelevant"

source /root/.functions.sh

# check if required packages are installed
dpkg -s hdparm &> /dev/null || (printe "Unable to locate hdparm, exiting..."; exit 1)
dpkg -s dialog &> /dev/null || (printe "Unable to locate dialog, exiting..."; exit 1)
dpkg -s dc3dd &> /dev/null || (printe "Unable to locate dc3dd, exiting..."; exit 1)

allAvailableDevices=($(find /sys/class/block -regextype posix-extended -regex '.*/([s|v]d[a-z]|nvme[0-9]n[0-9])'))

# block devices with size equals zero, mean that this is a slot (e.g. sd card reader) without a device
availableDevices=()
for devicePath in ${allAvailableDevices[@]}; do
  if [[ $(cat ${devicePath}/size) == "0" ]]; then
    continue
  fi
  availableDevices+=(${devicePath})
done

# we create a index-based array, so that the key of the array is also part of the array data
# (dev1 dev2) => (0 dev1 1 dev2 ...)
deviceChoices=()
for i in $(seq 0 $((${#availableDevices[@]}-1))); do
  device=$(basename ${availableDevices[${i}]})
  size=$(lsblk -l -o name,size | grep -e ${device} | head -n 1 | awk '{print $2}')
  deviceChoices+=("${i}" "/dev/${device} (${size})")
done

choosen=$(dialog \
  --backtitle "Secure Shell Networks: Wipe System" \
  --title "Available devices" \
  --menu "Which storage device should be wiped?" \
  16 60 16 "${deviceChoices[@]}" 3>&2 2>&1 1>&3)

device=/dev/$(basename ${availableDevices[$choosen]})

# if the selected device is not a valid block device exit
[ ! -b ${device} ] && (printe "${device} is not a valid block device..."; exit 1)

# check if selected device supports secure erase
if hdparm -I ${device} | grep supported | grep -q erase; then
  print "${device} supports secure erase"

  # unfreeze the device if it's frozen
  if ! hdparm -I ${device} | grep not | grep -q frozen; then
    printe "${device} is frozen, let the device it sleep for 10 seconds"
    sleep 1
    rtcwake -s 10 -m mem
    print "The device woke up, rechecking."
  fi
  if hdparm -I ${device} | grep not | grep -q frozen; then
    print "${device} is not frozen, performing erase..."
    # set ata password to issue secure erase
    hdparm --user-master u --security-set-pass ${ataPassword} ${device}
    hdparm --user-master u --security-erase ${ataPassword} ${device}
    exit 0
  else
    # unfreeze did not work, so wipe it using dc3dd
    printe "The device is still frozen, ${device} is going to be overwritten using dc3dd..."
  fi
else
  print "${device} does not support secure erase, overwriting ${device} using dc3dd..."
fi
/usr/bin/dc3dd wipe=${device}
exit 0
